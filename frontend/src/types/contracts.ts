// Contract type definitions
export interface QuestNFT {
  // Basic NFT properties
  tokenId: bigint
  owner: string
  nftType: {
    id: bigint
    name: string
    energyType: string
    rarity: string
    image: string
  }
  mintedAt: bigint
  isUsed: boolean
}

export interface PlantToken {
  // Plant token properties
  tokenId: bigint
  owner: string
  plantType: {
    id: bigint
    name: string
    energyType: string
    maxCapacity: bigint
    image: string
  }
  currentCapacity: bigint
  subUnits: bigint
  createdAt: bigint
  lastUpdated: bigint
}

export interface NFTType {
  id: bigint
  name: string
  energyType: string
  rarity: string
  image: string
  maxSupply: bigint
  currentSupply: bigint
}

export interface PlantType {
  id: bigint
  name: string
  energyType: string
  maxCapacity: bigint
  image: string
  requiredNFTs: bigint[]
}

// Contract factory types (these would be generated by typechain)
export interface QuestNFT__factory {
  abi: any[]
  createInterface(): any
  connect(address: string): any
}

export interface PlantToken__factory {
  abi: any[]
  createInterface(): any
  connect(address: string): any
}

// Contract interaction types
export interface PurchasePackageParams {
  packageId: bigint
  value: bigint
}

export interface CreatePlantParams {
  nftTokenIds: bigint[]
  plantTypeId: bigint
}

export interface LoadSubUnitsParams {
  tokenId: bigint
  amount: bigint
}

export interface UnloadSubUnitsParams {
  tokenId: bigint
  amount: bigint
}

// Contract events
export interface NFTMintedEvent {
  tokenId: bigint
  owner: string
  nftTypeId: bigint
  timestamp: bigint
}

export interface PlantCreatedEvent {
  tokenId: bigint
  owner: string
  plantTypeId: bigint
  timestamp: bigint
}

export interface SubUnitsLoadedEvent {
  tokenId: bigint
  amount: bigint
  timestamp: bigint
}

export interface SubUnitsUnloadedEvent {
  tokenId: bigint
  amount: bigint
  timestamp: bigint
}




