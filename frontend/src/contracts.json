{
  "QuestNFT": {
    "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
    "abi": [
      "constructor(address)",
      "error ApprovalCallerNotOwnerNorApproved()",
      "error ApprovalQueryForNonexistentToken()",
      "error BalanceQueryForZeroAddress()",
      "error MintERC2309QuantityExceedsLimit()",
      "error MintToZeroAddress()",
      "error MintZeroQuantity()",
      "error NotCompatibleWithSpotMints()",
      "error OwnableInvalidOwner(address)",
      "error OwnableUnauthorizedAccount(address)",
      "error OwnerQueryForNonexistentToken()",
      "error OwnershipNotInitializedForExtraData()",
      "error SequentialMintExceedsLimit()",
      "error SequentialUpToTooSmall()",
      "error SpotMintTokenIdTooSmall()",
      "error TokenAlreadyExists()",
      "error TransferCallerNotOwnerNorApproved()",
      "error TransferFromIncorrectOwner()",
      "error TransferToNonERC721ReceiverImplementer()",
      "error TransferToZeroAddress()",
      "error URIQueryForNonexistentToken()",
      "event Approval(address indexed,address indexed,uint256 indexed)",
      "event ApprovalForAll(address indexed,address indexed,bool)",
      "event ConsecutiveTransfer(uint256 indexed,uint256,address indexed,address indexed)",
      "event NFTsBurned(address indexed,uint256[])",
      "event OwnershipTransferred(address indexed,address indexed)",
      "event PackageCreated(uint256 indexed,uint256[])",
      "event PackagePurchased(address indexed,uint256 indexed,uint256[])",
      "event Transfer(address indexed,address indexed,uint256 indexed)",
      "function NFTS_PER_PACKAGE() view returns (uint256)",
      "function TOTAL_NFT_TYPES() view returns (uint256)",
      "function approve(address,uint256) payable",
      "function balanceOf(address) view returns (uint256)",
      "function burnForPlant(address) returns (bool)",
      "function canCreatePlant(address) view returns (bool)",
      "function createWeeklyPackage() returns (uint256[])",
      "function currentPackageId() view returns (uint256)",
      "function getApproved(uint256) view returns (address)",
      "function getNFTType(uint256) view returns (uint256)",
      "function getPackageContents(uint256) view returns (uint256[])",
      "function getTotalPackages() view returns (uint256)",
      "function getUserNFTCounts(address) view returns (uint256[])",
      "function isApprovedForAll(address,address) view returns (bool)",
      "function name() view returns (string)",
      "function owner() view returns (address)",
      "function ownerOf(uint256) view returns (address)",
      "function packageContents(uint256,uint256) view returns (uint256)",
      "function purchasePackage(uint256)",
      "function renounceOwnership()",
      "function safeTransferFrom(address,address,uint256) payable",
      "function safeTransferFrom(address,address,uint256,bytes) payable",
      "function setApprovalForAll(address,bool)",
      "function supportsInterface(bytes4) view returns (bool)",
      "function symbol() view returns (string)",
      "function tokenURI(uint256) view returns (string)",
      "function totalSupply() view returns (uint256)",
      "function transferFrom(address,address,uint256) payable",
      "function transferOwnership(address)"
    ]
  },
  "PlantToken": {
    "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
    "abi": [
      "constructor(address,address)",
      "error ERC1155InsufficientBalance(address,uint256,uint256,uint256)",
      "error ERC1155InvalidApprover(address)",
      "error ERC1155InvalidArrayLength(uint256,uint256)",
      "error ERC1155InvalidOperator(address)",
      "error ERC1155InvalidReceiver(address)",
      "error ERC1155InvalidSender(address)",
      "error ERC1155MissingApprovalForAll(address,address)",
      "error OwnableInvalidOwner(address)",
      "error OwnableUnauthorizedAccount(address)",
      "event ApprovalForAll(address indexed,address indexed,bool)",
      "event OwnershipTransferred(address indexed,address indexed)",
      "event PlantCreated(address indexed,uint256 indexed,string,string)",
      "event SubUnitsLoaded(uint256 indexed,uint256,uint256)",
      "event SubUnitsUnloaded(uint256 indexed,uint256,uint256)",
      "event TransferBatch(address indexed,address indexed,address indexed,uint256[],uint256[])",
      "event TransferSingle(address indexed,address indexed,address indexed,uint256,uint256)",
      "event URI(string,uint256 indexed)",
      "function DEFAULT_SUB_UNITS() view returns (uint256)",
      "function balanceOf(address,uint256) view returns (uint256)",
      "function balanceOfBatch(address[],uint256[]) view returns (uint256[])",
      "function createPlant(string) returns (uint256)",
      "function getNextTokenId() view returns (uint256)",
      "function getOwnerTokens(address) view returns (uint256[])",
      "function getTokenByName(string) view returns (uint256)",
      "function getTokenByQRCode(string) view returns (uint256)",
      "function getTokenDetails(uint256) view returns (string,uint256,string,uint256,address)",
      "function getTokenHistory(uint256) view returns ((uint256,uint256,bool,string)[])",
      "function isApprovedForAll(address,address) view returns (bool)",
      "function loadSubUnitsFormula(uint256,uint256,bytes32)",
      "function loadSubUnitsManual(uint256,uint256)",
      "function nameExists(string) view returns (bool)",
      "function nameToTokenId(string) view returns (uint256)",
      "function owner() view returns (address)",
      "function qrCodeToTokenId(string) view returns (uint256)",
      "function questNFT() view returns (address)",
      "function renounceOwnership()",
      "function safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)",
      "function safeTransferFrom(address,address,uint256,uint256,bytes)",
      "function setApprovalForAll(address,bool)",
      "function supportsInterface(bytes4) view returns (bool)",
      "function tokenHistory(uint256,uint256) view returns (uint256,uint256,bool,string)",
      "function tokens(uint256) view returns (string,uint256,string,uint256,address)",
      "function transferOwnership(address)",
      "function unloadSubUnits(uint256,uint256)",
      "function uri(uint256) view returns (string)"
    ]
  }
}